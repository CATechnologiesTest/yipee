# Generated by Yipee.io
# Application: simple-service-bob

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-vol-claim
spec:
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-vol-claim
spec:
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem

---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    name: bobk
    component: redis
  ports:
  - targetPort: 6379
    port: 6379
    protocol: TCP

---
apiVersion: v1
kind: Service
metadata:
  name: uwsgi-nginx-flask
spec:
  selector:
    name: bobk
    component: uwsgi-nginx-flask
  ports:
  - targetPort: 5000
    port: 5555
    protocol: TCP

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      name: bobk
      component: redis
  rollbackTo:
    revision: 0
  template:
    spec:
      containers:
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: redis-vol
        env:
        - name: REDIS_DB_HOST
          value: mysql:3306
        - name: REDIS_DB_PASSWORD
          value: redis
        - name: REDIS_DB_USER
          value: redisuser
      volumes:
      - name: redis-vol
        persistentVolumeClaim:
          claimName: redis-vol-claim
    metadata:
      labels:
        name: bobk
        component: redis
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  replicas: 1

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: uwsgi-nginx-flask
spec:
  selector:
    matchLabels:
      name: bobk
      component: uwsgi-nginx-flask
  rollbackTo:
    revision: 0
  template:
    spec:
      containers:
      - name: uwsgi-nginx-flask
        image: goats
        ports:
        - containerPort: 5000
          protocol: TCP
        env:
        - name: REDIS_HOST
          value: redis
      restartPolicy: Always
    metadata:
      labels:
        name: bobk
        component: uwsgi-nginx-flask
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  replicas: 1

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      name: bobk
      component: mysql
  rollbackTo:
    revision: 0
  template:
    spec:
      containers:
      - name: mysql
        image: mysql:latest
        volumeMounts:
        - mountPath: /opt/db
          name: mysql-vol
        env:
        - name: MYSQL_DATABASE
          value: mysql
        - name: MYSQL_PASSWORD
          value: redis
        - name: MYSQL_ROOT_PASSWORD
          value: password
        - name: MYSQL_USER
          value: redisuser
      volumes:
      - name: mysql-vol
        persistentVolumeClaim:
          claimName: mysql-vol-claim
    metadata:
      labels:
        name: bobk
        component: mysql
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  replicas: 1

